app.py

from flask import Flask
from flask import request, render_template
from flask_debugtoolbar import DebugToolbarExtension
from stories import story

app=Flask(__name__) 
app.config["SECRET_KEY"] = "secret"
debug  = DebugToolbarExtension(app)

@app.route("/")
def home():
    ask = story.prompts
    return render_template("inputs.html", prompts=ask)

"""Result """
@app.route("/story")
def story():
    questions = Story.generate(request.args)
    return render_template("story.html", questions = questions) 

inputs.html:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Matlibs</title>
</head>
<body>
    <form action="/story">
        {% for i in ask %}
            <p>{{i}}:<input name="{{i}}"></p>
        {% endfor %}
        <button>submit</button> 
    </form>


    
</body>
</html>

story.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>{{text}}</h1>
</body>
</html>


stories.py:


"""Madlibs Stories."""


class Story:
    """Madlibs story.

    To  make a story, pass a list of prompts, and the text
    of the template.

        >>> s = Story(["noun", "verb"],
        ...     "I love to {verb} a good {noun}.")

    To generate text from a story, pass in a dictionary-like thing
    of {prompt: answer, promp:answer):

        >>> ans = {"verb": "eat", "noun": "mango"}
        >>> s.generate(ans)
        'I love to eat a good mango.'
    """

    def __init__(self, words, text):
        """Create story with words and template text."""

        self.prompts = words
        self.template = text

    def generate(self, answers):
        """Substitute answers into text."""

        text = self.template

        for (key, val) in answers.items():
            text = text.replace("{" + key + "}", val)

        return text


# Here's a story to get you started


story = Story(
    ["place", "noun", "verb", "adjective", "plural_noun"],
    """Once upon a time in a long-ago {place}, there lived a
       large {adjective} {noun}. It loved to {verb} {plural_noun}."""
)

