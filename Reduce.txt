1)extractValue
Write a function called extractValue which accepts 
an array of objects and a key and returns a new array 
with the value of each object at the key.

function extractValue(arr, key){
    
    let emptyArr = []
    return arr.reduce(function(acc,next){
        emptyArr.push(next[key]);
        return emptyArr;
    },arr[0]);
}



2) vowelCount
Write a function called vowelCount which accepts a string and 
returns an object with the keys as the vowel and the values as 
the number of times the vowel appears in the string. 
This function should be case insensitive so a lowercase letter and uppercase letter should count

function vowelCount(arr)
{
    let allLower = arr.toLowerCase()
    let newArr = allLower.split("")
    let vowels = "aeiou"
    let newArray = []
    return newArr.reduce(function(acc, nextElement)
    {
        if(vowels.indexOf(nextElement)!=-1)
        {
            if(newArray[nextElement])
            {
               newArray[nextElement]++ 
            }
            else
            {
                newArray[nextElement] = 1
            }
        }
        return newArray
    },newArr[0] )
}


3) addKeyAndValue
Write a function called addKeyAndValue which accepts an array of objects and returns the array of objects passed to it 
with each object now including the key and value passed to the function.




4)partition
Write a function called partition which accepts an array and a callback and returns an array with two arrays inside of it.
The partition function should run the callback function on each value in the array and if the result of the callback function 
at that specific value is true, the value should be placed in the first subarray. If the result of the callback function
 at that specific value is false, the value should be placed in the second subarray.

function partition(arr, cb){
    return arr.reduce(function(acc,next){
        if(cb(next)){
            acc[0].push(next);
        } else {
            acc[1].push(next);
        }
        return acc;
    }, [[],[]]);
}